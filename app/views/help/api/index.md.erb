API доступа к данным расписания
===============================

Формат
------

Расписание доступно в следующих форматах: HTML, XLSX, XML и JSON. Список групп доступен в форматах HTML, XML и JSON. Формат задаётся либо указанием соответствующего расширения в конце URL, либо передачей соответствующего MIME-типа в HTTP-заголовке `Accept` (например: `Accept: application/xml` ).

Так же сервер поддерживает gzip-сжатие отправляемых данных. Для получения данных в сжатом виде следует указать HTTP-заголовок `Accept-Encoding` (например: `Accept-Encoding: gzip, deflate` )

Список групп
------------

Список групп можно запросить GET-запросом по URL <<%= timetable_groups_url %>> (<<%= timetable_groups_url(:format => :xml) %>> для XML формата). Можно ограничивать выдачу, передавая в параметре `group` строку, с которой начинается название искомой группы (например: <<%= timetable_groups_url(:format => :xml, :group => 25) %>> для выбора всех 250-х групп).

В XML формате возвращается корневой элемент `groups` с атрибутами `semester_id`, содержащим численный идентификатор текущего семестра и `semester` с названием текущего семестра. Внутри корневого элемента находятся элементы `group` содержащие название группы в атрибуте `name`, строку с кодом и названием специальности в атрибуте `speciality`, название факультета в атрибуте `faculty` и номер курса (года обучения), на котором находится (или находилась) группа в текущем семестре в атрибуте `course`.

__Внимание!__ В списке выводятся только те группы, для которых заполнено расписание на текущий семестр (хотя бы частично).

Список групп отсортирован по названию группы (лексикографически, по возрастанию).

Расписание для группы
---------------------

Расписание для группы можно запросить GET-запросом по URL вида <<%=timetable_groups_url %>/имя_группы>, где название группы — то же самое название, которое выдаётся в списке групп. Название должно быть URL-кодировано. (Например: <<%=timetable_group_url(:id => "257ом", :format => :xml) %>> для запроса расписания в XML-формате для группы _257ом_)

В XML формате возвращается корневой элемент `pairs` с атрибутами `group`, содержащим название группы, для которой было запрошено расписание, а так же `semester` и `semester_id` с информацией о семестре. Внутри корневого элемента находятся элементы `pair` со следующими атрибутами:

1. `day_of_the_week` — день недели (целое число, 1 — понедельник, 6 — суббота)
2. `pair_number` — номер пары в течении дня (целое число, в 8:15 начинается первая, в 19:00 — седьмая)
3. `week` — по какой неделе идёт пара (целое число, 0 — обе недели, 1 — первая, 2 — вторая)
4. `subgroup` — подгруппа, у которой идёт пара (целое число, 0 — обе подгруппы)

Внутри элемента находится текстовый узел, коротко характеризующий пару, а так же следующие элементы:

1. `discipline` — информация о дисциплине, в текстовом узле — полное название, в атрибуте `short_name` — сокращённое
2. `classroom` — информация об аудитории, в текстовом узле название аудитории вместе с корпусом, в атрибуте `name` — номер аудитории, в атрибуте `building` — название или номер корпуса. Данный узел может отсутствовать для недозаполненных пар.
3. `lecturer` — информация о преподавателе, в текстовом узле ФИО полностью с названием кафедры, в атрибуте `name` находится ФИО полностью, в атрибуте `short_name` — фамилия и инициалы, в атрибуте `department` — название кафедры.
4. `assistant` — информация об ассистирующем преподавателе, в текстовом узле ФИО полностью, в атрибуте `short_name` — фамилия и инициалы, в атрибуте `department` — название кафедры. Данный элемент может отсутствовать.

Пары в XML-формате отсортированы хронологически по возрастанию (сначала идут пары на понедельник, потом на вторник и т.д., в течение одного дня вначале идут более ранние пары. Среди пар с одним временем и днём недели сначала идут пары на обе недели, затем на первую неделю, затем — на вторую. Порядок пар по подгруппам не определён)

Семестры
--------

Запросить расписание (или список групп) на определённый семестр можно передав GET-параметр `semester_id` с идентификатором требуемого семестра. Система выдаст информацию на требуемый семестр.

Если приложение запоминает и использует cookie, выдаваемые системой, то система переключится на данный семестр до следующей передачи параметра.

Список семестров доступен по адресу <<%= semesters_url %>> в форматах XML и JSON.

В XML формате возвращается корневой элемент `semesters`. Внутри корневого элемента находятся элементы `semester` с названием семестра в текстовом узле и следующими атрибутами:

1. `year` — год начала учебного года (2012 для этого и следующего семестров)
2. `number` — номер семестра в учебном году (1 или 2)
3. `full_time` — очный (`true`) или заочный (`false`) семестр
4. `start` — дата начала семестра (ориентировочная)
5. `end` — дата окончания семестра (ориентировочная)

Семестры отсортированы хронологически в обратном порядке (последние в начале, очные впереди заочных).
